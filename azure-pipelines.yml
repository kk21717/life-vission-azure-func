trigger:
- master

variables:
  subscriptionName: <Name of your Azure subscription>
  appName: <Name of the function app>
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: DotNetCoreCLI@2
  displayName: "Restore Packages"
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: "Build"
  inputs:
    command: 'build'
    projects: '**/TimeEntryManager.csproj'
    arguments: '--output $(Build.BinariesDirectory)/publish_output --configuration Release'

- task: DotNetCoreCLI@2
  displayName: "Unit Test"
  inputs:
    command: 'test'
    projects: '**/TimeEntryManager.Tests.csproj'

- task: ArchiveFiles@2
  displayName: "Archive Files"
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)/publish_output'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: "Publish"
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: AzureFunctionApp@1 
  displayName: "Deploy"
  inputs:
    azureSubscription: $(subscriptionName)
    appType: functionAppLinux 
    appName: $(appName)
    package: $(Build.ArtifactStagingDirectory)/**/*.zip
    